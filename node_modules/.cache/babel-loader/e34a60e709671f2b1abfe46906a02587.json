{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caterina Thimm\\\\Documents\\\\Dev\\\\todo-list\\\\src\\\\components\\\\todo-list\\\\todo-list.tsx\",\n  _s = $RefreshSig$();\nimport { observer } from \"mobx-react\";\nimport { useState } from \"react\";\nimport { addTodosToLocalStorage } from \"../../store/store.helper\";\nimport store from \"../../store/store\";\nimport AddTodo from \"../add-todo/add-todo\";\nimport { Checkbox, Headline, Input } from \"./todo-list.styles\";\n\n/**\r\n * This component is being used to display all todos as a list.\r\n * It allows you to edit an entry in the list from the mobX store or delete a todo.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [editField, setEditField] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list__header\",\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Headline, {\n      children: [\"You have \", store.unfinishedTodos, \" unfinished todos left.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: store.todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            type: \"checkbox\",\n            checked: todo.checked && !editField,\n            onChange: () => todo.checked = !todo.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            className: \"input\",\n            type: \"text\",\n            value: todo.text,\n            onFocus: () => {\n              setEditField(true);\n            },\n            onBlur: () => {\n              setEditField(false);\n              addTodosToLocalStorage(store.todos);\n            },\n            onChange: e => todo.text = e.target.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => {\n              if (todo.checked) {\n                store.removeTodo(todo.id);\n              }\n            },\n            disabled: !todo.checked,\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"nYx36yDejS92uKA5NUjsovE73nc=\");\n_c = TodoList;\nexport default _c2 = observer(TodoList);\nvar _c, _c2;\n$RefreshReg$(_c, \"TodoList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["observer","useState","addTodosToLocalStorage","store","AddTodo","Checkbox","Headline","Input","TodoList","editField","setEditField","unfinishedTodos","todos","map","todo","checked","text","e","target","value","removeTodo","id"],"sources":["C:/Users/Caterina Thimm/Documents/Dev/todo-list/src/components/todo-list/todo-list.tsx"],"sourcesContent":["import { observer } from \"mobx-react\";\r\nimport { useState } from \"react\";\r\n\r\nimport { addTodosToLocalStorage } from \"../../store/store.helper\";\r\nimport store from \"../../store/store\";\r\n\r\nimport AddTodo from \"../add-todo/add-todo\";\r\n\r\nimport { Checkbox, Headline, Input } from \"./todo-list.styles\";\r\n\r\n/**\r\n * This component is being used to display all todos as a list.\r\n * It allows you to edit an entry in the list from the mobX store or delete a todo.\r\n */\r\n\r\nconst TodoList = () => {\r\n  const [editField, setEditField] = useState(false);\r\n\r\n  return (\r\n    <div className=\"column todo-list\">\r\n      <div className=\"todo-list__header\">Todo List</div>\r\n      <Headline>\r\n        You have {store.unfinishedTodos} unfinished todos left.\r\n      </Headline>\r\n      <div>\r\n        {store.todos.map((todo) => {\r\n          return (\r\n            <div key={todo.id} className=\"row\">\r\n              <Checkbox\r\n                type=\"checkbox\"\r\n                checked={todo.checked && !editField}\r\n                onChange={() => (todo.checked = !todo.checked)}\r\n              />\r\n              <Input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                value={todo.text}\r\n                onFocus={() => {\r\n                  setEditField(true);\r\n                }}\r\n                onBlur={() => {\r\n                  setEditField(false);\r\n                  addTodosToLocalStorage(store.todos);\r\n                }}\r\n                onChange={(e) => (todo.text = e.target.value)}\r\n              />\r\n              <button\r\n                className=\"button\"\r\n                onClick={() => {\r\n                  if (todo.checked) {\r\n                    store.removeTodo(todo.id);\r\n                  }\r\n                }}\r\n                disabled={!todo.checked}\r\n              >\r\n                Done\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <AddTodo />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(TodoList);\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAEhC,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,OAAOC,KAAK,MAAM,mBAAmB;AAErC,OAAOC,OAAO,MAAM,sBAAsB;AAE1C,SAASC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,oBAAoB;;AAE9D;AACA;AACA;AACA;AAHA;AAKA,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,oBACE;IAAK,SAAS,EAAC,kBAAkB;IAAA,wBAC/B;MAAK,SAAS,EAAC,mBAAmB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAClD,QAAC,QAAQ;MAAA,wBACGE,KAAK,CAACQ,eAAe;IAAA;MAAA;MAAA;MAAA;IAAA,QACtB,eACX;MAAA,UACGR,KAAK,CAACS,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAK;QACzB,oBACE;UAAmB,SAAS,EAAC,KAAK;UAAA,wBAChC,QAAC,QAAQ;YACP,IAAI,EAAC,UAAU;YACf,OAAO,EAAEA,IAAI,CAACC,OAAO,IAAI,CAACN,SAAU;YACpC,QAAQ,EAAE,MAAOK,IAAI,CAACC,OAAO,GAAG,CAACD,IAAI,CAACC;UAAS;YAAA;YAAA;YAAA;UAAA,QAC/C,eACF,QAAC,KAAK;YACJ,SAAS,EAAC,OAAO;YACjB,IAAI,EAAC,MAAM;YACX,KAAK,EAAED,IAAI,CAACE,IAAK;YACjB,OAAO,EAAE,MAAM;cACbN,YAAY,CAAC,IAAI,CAAC;YACpB,CAAE;YACF,MAAM,EAAE,MAAM;cACZA,YAAY,CAAC,KAAK,CAAC;cACnBR,sBAAsB,CAACC,KAAK,CAACS,KAAK,CAAC;YACrC,CAAE;YACF,QAAQ,EAAGK,CAAC,IAAMH,IAAI,CAACE,IAAI,GAAGC,CAAC,CAACC,MAAM,CAACC;UAAO;YAAA;YAAA;YAAA;UAAA,QAC9C,eACF;YACE,SAAS,EAAC,QAAQ;YAClB,OAAO,EAAE,MAAM;cACb,IAAIL,IAAI,CAACC,OAAO,EAAE;gBAChBZ,KAAK,CAACiB,UAAU,CAACN,IAAI,CAACO,EAAE,CAAC;cAC3B;YACF,CAAE;YACF,QAAQ,EAAE,CAACP,IAAI,CAACC,OAAQ;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAGjB;QAAA,GA7BDD,IAAI,CAACO,EAAE;UAAA;UAAA;UAAA;QAAA,QA8BX;MAEV,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,eACN,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEV,CAAC;AAAC,GAjDIb,QAAQ;AAAA,KAARA,QAAQ;AAmDd,qBAAeR,QAAQ,CAACQ,QAAQ,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}