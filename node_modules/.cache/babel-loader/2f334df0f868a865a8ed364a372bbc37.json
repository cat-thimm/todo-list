{"ast":null,"code":"import { computed, makeObservable, observable } from \"mobx\"; // Standard interface and functions\n\nconst removeTodo = (todos, id) => todos.filter(todo => todo.id !== id);\n\nconst addTodo = (todos, text) => [...todos, {\n  id: Math.max(0, Math.max(...todos.map(({\n    id\n  }) => id))) + 1,\n  text,\n  done: false\n}]; // MobX implementation\n\n\nclass Todos {\n  constructor() {\n    this.todos = [];\n    this.newTodo = \"\";\n    makeObservable(this, {\n      todos: observable,\n      newTodo: observable,\n      unfinishedTodos: computed\n    });\n  }\n\n  get unfinishedTodos() {\n    return this.todos.filter(todo => todo.done !== true).length;\n  }\n\n  removeTodo(id) {\n    this.todos = removeTodo(this.todos, id);\n  }\n\n  addTodo() {\n    this.todos = addTodo(this.todos, this.newTodo);\n    this.newTodo = \"\";\n  }\n\n}\n\nconst store = new Todos();\nexport default store;","map":{"version":3,"sources":["/home/caterina/Documents/react-exercise-todo-list/src/components/store.ts"],"names":["computed","makeObservable","observable","removeTodo","todos","id","filter","todo","addTodo","text","Math","max","map","done","Todos","constructor","newTodo","unfinishedTodos","length","store"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,cAAnB,EAAmCC,UAAnC,QAAqD,MAArD,C,CAEA;;AAOA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAgBC,EAAhB,KACfD,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAnC,CADJ;;AAGA,MAAMG,OAAO,GAAG,CAACJ,KAAD,EAAgBK,IAAhB,KAAyC,CACrD,GAAGL,KADkD,EAErD;AACIC,EAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACC,GAAL,CAAS,GAAGP,KAAK,CAACQ,GAAN,CAAU,CAAC;AAAEP,IAAAA;AAAF,GAAD,KAAYA,EAAtB,CAAZ,CAAZ,IAAsD,CAD9D;AAEII,EAAAA,IAFJ;AAGII,EAAAA,IAAI,EAAE;AAHV,CAFqD,CAAzD,C,CASA;;;AACA,MAAMC,KAAN,CAAY;AAIRC,EAAAA,WAAW,GAAG;AAAA,SAHdX,KAGc,GAHE,EAGF;AAAA,SAFdY,OAEc,GAFI,EAEJ;AACVf,IAAAA,cAAc,CAAC,IAAD,EAAO;AACjBG,MAAAA,KAAK,EAAEF,UADU;AAEjBc,MAAAA,OAAO,EAAEd,UAFQ;AAGjBe,MAAAA,eAAe,EAAEjB;AAHA,KAAP,CAAd;AAKH;;AAEkB,MAAfiB,eAAe,GAAW;AAC1B,WAAO,KAAKb,KAAL,CAAWE,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACM,IAAL,KAAc,IAAxC,EAA8CK,MAArD;AACH;;AAEDf,EAAAA,UAAU,CAACE,EAAD,EAAa;AACnB,SAAKD,KAAL,GAAaD,UAAU,CAAC,KAAKC,KAAN,EAAaC,EAAb,CAAvB;AACH;;AAEDG,EAAAA,OAAO,GAAG;AACN,SAAKJ,KAAL,GAAaI,OAAO,CAAC,KAAKJ,KAAN,EAAa,KAAKY,OAAlB,CAApB;AACA,SAAKA,OAAL,GAAe,EAAf;AACH;;AAvBO;;AA0BZ,MAAMG,KAAK,GAAG,IAAIL,KAAJ,EAAd;AAEA,eAAeK,KAAf","sourcesContent":["import { computed, makeObservable, observable } from \"mobx\";\n\n// Standard interface and functions\ninterface Todo {\n    id: number;\n    text: string;\n    done: boolean;\n}\n\nconst removeTodo = (todos: Todo[], id: number): Todo[] =>\n    todos.filter((todo) => todo.id !== id);\n\nconst addTodo = (todos: Todo[], text: string): Todo[] => [\n    ...todos,\n    {\n        id: Math.max(0, Math.max(...todos.map(({ id }) => id))) + 1,\n        text,\n        done: false,\n    },\n];\n\n// MobX implementation\nclass Todos {\n    todos: Todo[] = [];\n    newTodo: string = \"\";\n\n    constructor() {\n        makeObservable(this, {\n            todos: observable,\n            newTodo: observable,\n            unfinishedTodos: computed\n        });\n    }\n\n    get unfinishedTodos(): number {\n        return this.todos.filter(todo => todo.done !== true).length\n    }\n\n    removeTodo(id: number) {\n        this.todos = removeTodo(this.todos, id);\n    }\n\n    addTodo() {\n        this.todos = addTodo(this.todos, this.newTodo);\n        this.newTodo = \"\";\n    }\n}\n\nconst store = new Todos();\n\nexport default store;"]},"metadata":{},"sourceType":"module"}