{"ast":null,"code":"import { computed, makeObservable, observable } from \"mobx\";\n\n// Standard interface and functions\n\nconst removeTodo = (todos, id) => todos.filter(todo => todo.id !== id);\nconst addTodo = (todos, text) => [...todos, {\n  id: Math.max(0, Math.max(...todos.map(_ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  }))) + 1,\n  text,\n  done: false\n}];\n\n// MobX implementation\nclass Todos {\n  constructor() {\n    this.todos = [];\n    this.newTodo = \"\";\n    makeObservable(this, {\n      todos: observable,\n      newTodo: observable,\n      unfinishedTodos: computed\n    });\n  }\n  get unfinishedTodos() {\n    return this.todos.filter(todo => todo.done !== true).length;\n  }\n  removeTodo(id) {\n    this.todos = removeTodo(this.todos, id);\n  }\n  addTodo() {\n    this.todos = addTodo(this.todos, this.newTodo);\n    this.newTodo = \"\";\n  }\n}\nconst store = new Todos();\nexport default store;","map":{"version":3,"names":["computed","makeObservable","observable","removeTodo","todos","id","filter","todo","addTodo","text","Math","max","map","done","Todos","constructor","newTodo","unfinishedTodos","length","store"],"sources":["C:/Users/Caterina Thimm/Documents/Dev/react-exercise-todo-list/src/store/store.ts"],"sourcesContent":["import { computed, makeObservable, observable } from \"mobx\";\r\n\r\n// Standard interface and functions\r\ninterface Todo {\r\n    id: number;\r\n    text: string;\r\n    done: boolean;\r\n}\r\n\r\nconst removeTodo = (todos: Todo[], id: number): Todo[] =>\r\n    todos.filter((todo) => todo.id !== id);\r\n\r\nconst addTodo = (todos: Todo[], text: string): Todo[] => [\r\n    ...todos,\r\n    {\r\n        id: Math.max(0, Math.max(...todos.map(({ id }) => id))) + 1,\r\n        text,\r\n        done: false,\r\n    },\r\n];\r\n\r\n// MobX implementation\r\nclass Todos {\r\n    todos: Todo[] = [];\r\n    newTodo: string = \"\";\r\n\r\n    constructor() {\r\n        makeObservable(this, {\r\n            todos: observable,\r\n            newTodo: observable,\r\n            unfinishedTodos: computed\r\n        });\r\n    }\r\n\r\n    get unfinishedTodos(): number {\r\n        return this.todos.filter(todo => todo.done !== true).length\r\n    }\r\n\r\n    removeTodo(id: number) {\r\n        this.todos = removeTodo(this.todos, id);\r\n    }\r\n\r\n    addTodo() {\r\n        this.todos = addTodo(this.todos, this.newTodo);\r\n        this.newTodo = \"\";\r\n    }\r\n}\r\n\r\nconst store = new Todos();\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,cAAc,EAAEC,UAAU,QAAQ,MAAM;;AAE3D;;AAOA,MAAMC,UAAU,GAAG,CAACC,KAAa,EAAEC,EAAU,KACzCD,KAAK,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;AAE1C,MAAMG,OAAO,GAAG,CAACJ,KAAa,EAAEK,IAAY,KAAa,CACrD,GAAGL,KAAK,EACR;EACIC,EAAE,EAAEK,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACC,GAAG,CAAC,GAAGP,KAAK,CAACQ,GAAG,CAAC;IAAA,IAAC;MAAEP;IAAG,CAAC;IAAA,OAAKA,EAAE;EAAA,EAAC,CAAC,CAAC,GAAG,CAAC;EAC3DI,IAAI;EACJI,IAAI,EAAE;AACV,CAAC,CACJ;;AAED;AACA,MAAMC,KAAK,CAAC;EAIRC,WAAW,GAAG;IAAA,KAHdX,KAAK,GAAW,EAAE;IAAA,KAClBY,OAAO,GAAW,EAAE;IAGhBf,cAAc,CAAC,IAAI,EAAE;MACjBG,KAAK,EAAEF,UAAU;MACjBc,OAAO,EAAEd,UAAU;MACnBe,eAAe,EAAEjB;IACrB,CAAC,CAAC;EACN;EAEA,IAAIiB,eAAe,GAAW;IAC1B,OAAO,IAAI,CAACb,KAAK,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACM,IAAI,KAAK,IAAI,CAAC,CAACK,MAAM;EAC/D;EAEAf,UAAU,CAACE,EAAU,EAAE;IACnB,IAAI,CAACD,KAAK,GAAGD,UAAU,CAAC,IAAI,CAACC,KAAK,EAAEC,EAAE,CAAC;EAC3C;EAEAG,OAAO,GAAG;IACN,IAAI,CAACJ,KAAK,GAAGI,OAAO,CAAC,IAAI,CAACJ,KAAK,EAAE,IAAI,CAACY,OAAO,CAAC;IAC9C,IAAI,CAACA,OAAO,GAAG,EAAE;EACrB;AACJ;AAEA,MAAMG,KAAK,GAAG,IAAIL,KAAK,EAAE;AAEzB,eAAeK,KAAK"},"metadata":{},"sourceType":"module"}